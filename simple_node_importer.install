<?php

use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\Core\Entity\EntityType;

/**
 * Implements hook_uninstall().
 */
function simple_node_importer_uninstall() {
  $bundle = 'simple_node';

  //Load all nodes of Simple Node Content type  
  $nodes = \Drupal::entityQuery('node')->condition('type', $bundle)->execute();

  // Delete all nodes when module gets uninstalled.
  if(!empty($nodes)){
    entity_delete_multiple('node', $nodes);    
  }

  //Load simple node node type bundle
  $entity_type = \Drupal\node\Entity\NodeType::load($bundle);

  // Delete content type when module gets uninstalled.
  if(!empty($entity_type)){
    $entity_type->delete();    
  }

  $table = 'node_resolution';
  if (db_table_exists($table)) {
    db_drop_table($table);
  }
}

/**
 * Implements hook_schema().
 */
function simple_node_importer_schema() {
  $schema = array();
  $table = 'node_resolution';
  if (!db_table_exists($table)) {
    $schema['node_resolution'] = array(
      'description' => 'The base table for saving rows which fails while importing Nodes.',
      'fields' => array(
        'serid' => array(
          'description' => 'The primary identifier for a node resolution.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        // Defaults to NULL in order to avoid a brief period of potential
        // deadlocks on the index.
        'sni_nid' => array(
          'description' => 'The primary identifier for a simple node importer.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'data' => array(
          'description' => 'A serialized array of function names called to load an object corresponding',
          'type' => 'blob',
          'not null' => FALSE,
          'size' => 'big',
          'serialize' => TRUE,
          'translatable' => TRUE,
        ),
        'reference' => array(
          'description' => 'It will be a reference to uploaded file',
          'type' => 'varchar',
          'length' => 128,
          'not null' => TRUE,
          'default' => '',
        ),
        'status' => array(
          'type' => 'varchar',
          'not null' => TRUE,
          'default' => 0,
          'length' => 50,
          'description' => 'It contains serialize data of suuccess and failure data.',
        ),
        'created' => array(
          'description' => 'The Unix timestamp when the node was created.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'changed' => array(
          'description' => 'The Unix timestamp when the node was most recently saved.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'unique keys' => array(
        'serid' => array('serid'),
      ),
      'foreign keys' => array(
        'node_import' => array(
          'table' => 'node',
          'columns' => array('sni_nid' => 'nid'),
        ),
      ),
      'primary key' => array('serid'),
    );
  }
  return $schema;
}
